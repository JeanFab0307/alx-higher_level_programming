The function matrix_divided will be tested with this doctest
**********
Usage: matrix_divided(matrix, div)

       >>> matrix_divided = __import__('2-matrix_divided').matrix_divided


       >>> matrix = [[7, 4], [6, 2]]


       >>> matrix_divided(matrix, 3)
       [[2.33, 1.33], [2.0, 0.67]]

       >>> matrix_divided(matrix, -3)
       [[-2.33, -1.33], [-2.0, -0.67]]

       >>> matrix_divided(matrix, 0)
       Traceback (most recent call last):
       ZeroDivisionError: division by zero

       >>> matrix_divided(matrix, 'o')
       Traceback (most recent call last):
       TypeError: div must be a number

       >>> matrix_divided(matrix, None)
       Traceback (most recent call last):
       TypeError: div must be a number

       >>> matrix = [[7, 4], ['8', 2]]

       >>> matrix_divided(matrix, 3)
       Traceback (most recent call last):
       TypeError: matrix must be a matrix (list of lists) of integers/floats

       >>> matrix = [[7, 4], [8, 2, 0]]

       >>> matrix_divided(matrix, 3)
       Traceback (most recent call last):
       TypeError: Each row of the matrix must have the same size

       >>> matrix_divided([9, 7], 3)
       Traceback (most recent call last):
       TypeError: matrix must be a matrix (list of lists) of integers/floats

       >>> matrix_divided([], 3)
       Traceback (most recent call last):
       TypeError: matrix must be a matrix (list of lists) of integers/floats
