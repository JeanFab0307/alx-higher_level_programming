Validate value with the method integer_validator in class BaseGeometry
*****

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

	>>> bg = BaseGeometry()

	>>> bg.area()
	Traceback (most recent call last):
	Exception: area() is not implemented

	>>> bg.integer_validator("square", 8)

	>>> bg.integer_validator("Ok", 0)
	Traceback (most recent call last):
	ValueError: Ok must be greater than 0

	>>> bg.integer_validator("Ok", -87)
        Traceback (most recent call last):
        ValueError: Ok must be greater than 0

	>>> bg.integer_validator("Oklm", "89")
        Traceback (most recent call last):
        TypeError: Oklm must be an integer

	>>> bg.integer_validator("Oklm", 45.98)
        Traceback (most recent call last):
        TypeError: Oklm must be an integer

	>>> bg.integer_validator("Oklm", None)
        Traceback (most recent call last):
        TypeError: Oklm must be an integer

	>>> bg.integer_validator("Oklm", [9])
        Traceback (most recent call last):
        TypeError: Oklm must be an integer

	>>> bg.integer_validator("Oklm", (8,))
        Traceback (most recent call last):
        TypeError: Oklm must be an integer

	>>> bg.integer_validator("Oklm", {9})
        Traceback (most recent call last):
        TypeError: Oklm must be an integer

	>>> bg.integer_validator("Oklm", True)
        Traceback (most recent call last):
        TypeError: Oklm must be an integer

	>>> bg.integer_validator("Oklm")
        Traceback (most recent call last):
        TypeError: integer_validator() missing 1 required positional argument: 'value'

	>>> bg.integer_validator()
        Traceback (most recent call last):
        TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
